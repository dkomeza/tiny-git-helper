name: Release

on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  release-linux:
    strategy:
      matrix:
        platform:
          - release_for: ARM64 Linux
            target: aarch64-unknown-linux-gnu
            binary: "tgh-linux-arm64"
            host: "ubuntu-latest"
          - release_for: X86_64 Linux
            target: x86_64-unknown-linux-gnu
            binary: "tgh-linux-x64"
            host: "ubuntu-latest"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.platform.target }}

      - name: Setup cross-compilation
        run: cargo install -f cross

      - name: Build
        run: cross build --release --target ${{ matrix.platform.target }}

      - name: Compress binary
        run: tar -czf target/${{ matrix.platform.binary }}.tar.gz -C target/${{ matrix.platform.target }}/release tgh

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.platform.binary }}.tar.gz
          asset_name: ${{ matrix.platform.binary }}.tar.gz
          tag: ${{ github.ref }}

  release-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --release

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/tgh.exe
          asset_name: tgh-windows-x64.exe
          tag: ${{ github.ref }}

  release-macos:
    strategy:
      matrix:
        platform:
          - release_for: X86_64 macOS
            target: x86_64-apple-darwin
            binary: "tgh-darwin-x64"
            host: "macos-latest"
          - release_for: ARM64 macOS
            target: aarch64-apple-darwin
            binary: "tgh-darwin-arm64"
            host: "macos-latest"

    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.platform.target }}

      - name: Setup cross-compilation
        run: cargo install -f cross

      - name: Build
        run: cross build --release --target ${{ matrix.platform.target }}

      - name: Compress binary
        run: tar -czf target/${{ matrix.platform.binary }}.tar.gz -C target/${{ matrix.platform.target }}/release tgh

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.platform.binary }}.tar.gz
          asset_name: ${{ matrix.platform.binary }}.tar.gz
          tag: ${{ github.ref }}
